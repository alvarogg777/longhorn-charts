# Source: elasticsearch/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "elasticsearch-test-connection"
  labels:
    helm.sh/chart: elasticsearch-0.4.0
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/version: "7.14.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['https://elastic.k3d.io']
  restartPolicy: Never
MANIFEST:
---
# Source: elasticsearch/templates/service-internal.yaml
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-internal
  labels:
    helm.sh/chart: elasticsearch-0.4.0
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/version: "7.14.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 9200
      targetPort: http
      protocol: TCP
      name: http
    - port: 9300
      targetPort: transport
      protocol: TCP
      name: transport
  selector:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: elasticsearch
---
# Source: elasticsearch/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  labels:
    helm.sh/chart: elasticsearch-0.4.0
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/version: "7.14.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9200
      targetPort: http
      protocol: TCP
      name: http
    - port: 9300
      targetPort: transport
      protocol: TCP
      name: transport
  selector:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: elasticsearch
---
# Source: elasticsearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  labels:
    helm.sh/chart: elasticsearch-0.4.0
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/version: "7.14.0"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: elasticsearch-internal
  podManagementPolicy: OrderedReady      
  replicas: 1
  updateStrategy: 
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/instance: elasticsearch
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/instance: elasticsearch
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: elasticsearch-init
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          image: "docker.elastic.co/elasticsearch/elasticsearch:7.14.0"
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'cp -R /usr/share/elasticsearch/config/* /config']
          volumeMounts:
            - name: config
              mountPath: /config
      containers:
        - name: elasticsearch
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          image: "docker.elastic.co/elasticsearch/elasticsearch:7.14.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
            - name: transport
              containerPort: 9300
              protocol: TCP
          env:
            
            - name: ES_JAVA_OPTS
              value: "-Xms512m -Xmx512m"
            - name: discovery.type
              value: "single-node"
            - name: cluster.name
              value: "singlenode-cluster"
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          livenessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Host
                  value: localhost:9200
            initialDelaySeconds: 60
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Host
                  value: localhost:9200
            initialDelaySeconds: 60
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 10
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /usr/share/elasticsearch/config
              name: config
            - mountPath: /usr/share/elasticsearch/logs
              name: log
            - mountPath: /usr/share/elasticsearch/data
              name: elasticsearch-volume
      volumes:
        - name: tmp
          emptyDir: {}
        - name: log
          emptyDir: {}
        - name: config
          emptyDir: {}
        - name: elasticsearch-volume
          emptyDir: {}
---
# Source: elasticsearch/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: elasticsearch
  labels:
    helm.sh/chart: elasticsearch-0.4.0
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: elasticsearch
    app.kubernetes.io/version: "7.14.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-stg
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
    external-dns.alpha.kubernetes.io/hostname: elastic.k3d.io
    kubernetes.io/ingress.class: traefik
    traefik.frontend.passHostHeader: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  tls:
   - secretName: authelia-ingress-tls
     hosts:
       - elastic.k3d.io
  rules:
    - host: elastic.k3d.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: elasticsearch
                port:
                  number: 9200

